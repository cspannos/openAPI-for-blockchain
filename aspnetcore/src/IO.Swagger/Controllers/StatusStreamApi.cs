/*
 * OpenAPI Implementation of Eth 2.0 
 *
 * Minimal OpenAPI specification for Spacemesh public facing API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StatusStreamApiController : ControllerBase
    { 
        /// <summary>
        /// Node status events (sync and net).
        /// </summary>
        /// <remarks>Instructs the beacon node to publish a newly signed beacon block to the beacon network, to be included in the beacon chain.</remarks>
        /// <param name="beaconBlock">The &#x60;BeaconBlock&#x60; object, as sent from the beacon node originally, but now with the signature field completed.</param>
        /// <response code="200">Request successful.</response>
        /// <response code="400">Invalid request syntax.</response>
        /// <response code="500">Beacon node internal error.</response>
        /// <response code="503">Beacon node is currently syncing, try again later.</response>
        [HttpPost]
        [Route("/insight-dc-sv-2020/Spacemesh_Public_OpenAPI/1.0.0/validator/block")]
        [ValidateModelState]
        [SwaggerOperation("ValidatorBlockPost")]
        public virtual IActionResult ValidatorBlockPost([FromQuery][Required()]BeaconBlock beaconBlock)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);

            throw new NotImplementedException();
        }
    }
}
